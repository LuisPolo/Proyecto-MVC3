
@model IEnumerable<OdeTofood.Models.Review> 

@{
    ViewBag.Title = "Index";
    var first = Model.First();//Primer review de los restauranes
    //Layout = "~/Views/Shared/_Layout2.cshtml"; Puedo especificar que layout usar como master page.
}




<h2>The Latest Reviews</h2>

@foreach (var item in Model)
{
    @:Review Luis @*Se coloca asi cuando kiero que el texto sea considerado como html*@
  @Html.Partial("_Review", item) //Se coloca cuando quiero que una parte de la vista este separada para usarla en otros lados. Reutilizar las vistas.
}


<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rating)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Body)
        </th>
        <th>           
            @Html.DisplayNameFor(model => model.Created)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
           @(item.Rating/10.0)
        </td>
        <td>
          @Html.DisplayFor(modelItem => item.Body)
            @@OdeTofood          
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Created)
            @*@Html.Raw(item.Body) Esto es para que el codigo codebehind me devuelva un script y se interprete como tal, no como texto*@
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@section Footer
    {
    <p>This is the footer</p>
    
    }